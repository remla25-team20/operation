apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata: { name: gateway }
spec:
  selector: { istio: ingressgateway }
  servers:
    - port: { number: 80, name: http, protocol: HTTP }
      hosts: [ "*" ]
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: entry-service
spec:
  gateways:
    - gateway
  hosts:
    - "*"
  http:
    - match:
      - uri:
          prefix: /model-service/predict
      route:
        - destination:
            host: model-service
            subset: v1   # or as needed
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: app-service
            subset: v1
          weight: 90
        - destination:
            host: app-service
            subset: v2
          weight: 10
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: app-service
spec:
  host: app-service
  subsets:
    - name: v1
      labels:
        version: "{{ .Values.app.version }}"
    - name: v2
      labels:
        version: "{{ .Values.app.versionCanary }}"
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: model-service-dr
spec:
  host: model-service
  subsets:
    - name: v1
      labels:
        version: "{{ .Values.modelService.version }}"
    - name: v2
      labels:
        version: "{{ .Values.modelService.versionCanary }}"
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: model-service-vs
spec:
  hosts:
    - model-service
  http:
    - match:
        - sourceLabels:
            version: "{{ .Values.app.versionCanary }}"
      route:
        - destination:
            host: model-service
            subset: v2
    - route:
        - destination:
            host: model-service
            subset: v1
