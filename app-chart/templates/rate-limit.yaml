# ---------- 1. Redis Service (in default namespace) -------------------
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: default
  labels:
    app: redis
spec:
  ports:
  - name: redis
    port: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis:alpine
        name: redis
        ports:
        - containerPort: 6379
---
# ---------- 2. ConfigMap with Per-IP Rate Limit Rule ------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: ratelimit-config
  namespace: default
data:
  config.yml: |
    domain: user-ratelimit
    descriptors:
      - key: remote_address
        rate_limit:
          # Modified for easier testing
          unit: minute
          requests_per_unit: 5
---
# ---------- 3. RateLimit Service (in default namespace) ---------------
apiVersion: v1
kind: Service
metadata:
  name: ratelimit
  namespace: default
  labels:
    app: ratelimit
spec:
  ports:
  - name: grpc-port
    port: 8081
    targetPort: 8081
  selector:
    app: ratelimit
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratelimit
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratelimit
  template:
    metadata:
      labels:
        app: ratelimit
    spec:
      containers:
      - image: envoyproxy/ratelimit:master
        name: ratelimit
        command: ["/bin/ratelimit"]
        env:
        - name: LOG_LEVEL
          value: debug
        - name: REDIS_URL
          # Using short name because both are in the 'default' namespace
          value: redis:6379
        - name: RUNTIME_ROOT
          value: /data
        - name: RUNTIME_SUBDIRECTORY
          value: ratelimit
        - name: REDIS_SOCKET_TYPE
          value: tcp
        ports:
        - containerPort: 8081
        volumeMounts:
        - name: config-volume
          mountPath: /data/ratelimit/config/config.yml
          subPath: config.yml
      volumes:
      - name: config-volume
        configMap:
          name: ratelimit-config
---
# ---------- 4. The Corrected EnvoyFilter ------------------------------
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  # This must be in istio-system to target the gateway
  name: user-rate-limit-filter
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      istio: ingressgateway
  configPatches:
  # Patch 1: Inject the HTTP filter
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.ratelimit
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
          domain: user-ratelimit
          failure_mode_deny: true
          rate_limit_service:
            grpc_service:
              envoy_grpc:
                # ADAPTED: Point to the 'ratelimit' service in the 'default' namespace
                cluster_name: outbound|8081||ratelimit.default.svc.cluster.local
                authority: ratelimit.default.svc.cluster.local
            transport_api_version: V3
  # Patch 2: Apply the Per-IP rule to all Virtual Hosts on the gateway
  - applyTo: VIRTUAL_HOST
    match:
      context: GATEWAY
    patch:
      operation: MERGE
      value:
        rate_limits:
        - actions:
          # This action tells Envoy to use the client's IP address for rate limiting
          - remote_address: {}