- hosts: all
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  tasks:
    - name: Copy metallb manifest to VM
      ansible.builtin.copy:
        src: resources/metallb-native.yaml
        dest: /tmp/metallb-native.yaml
    - name: Apply Flannel manifest
      ansible.builtin.command: kubectl apply -f /tmp/metallb-native.yaml
      changed_when: false
    # Cert-Manager will allow us to use self-signed certificates
    - name: Add cert-manager Helm repo
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: https://charts.jetstack.io
    - name: Install cert-manager with CRDs
      kubernetes.core.helm:
        name: cert-manager
        chart_ref: jetstack/cert-manager
        release_namespace: cert-manager
        create_namespace: true
        values:
          installCRDs: true
    - name: Copy selfsigned-issuer to VM
      ansible.builtin.copy:
        src: resources/selfsigned-issuer.yaml
        dest: /tmp/selfsigned-issuer.yaml
    - name: Apply selfsigned-issuer manifest
      ansible.builtin.command: kubectl apply -f /tmp/selfsigned-issuer.yaml
      changed_when: false
    - name: Wait until metallb is fully initialized
      ansible.builtin.command: >
        kubectl wait
        -n metallb-system
        -l app=metallb,component=controller --for=condition=ready
        pod
        --timeout=60s
      changed_when: false
    - name: Copy metallb resource definition manifest to VM
      ansible.builtin.copy:
        src: resources/metallb-resources.yaml
        dest: /tmp/metallb-resources.yaml
    - name: Initialize IPAddressPool and L2Advertisement
      ansible.builtin.command: kubectl apply -f /tmp/metallb-resources.yaml
      changed_when: false
    - name: Add Ingress-Nginx Helm repository
      kubernetes.core.helm_repository:
        name: ingress-nginx
        repo_url: "https://kubernetes.github.io/ingress-nginx"
    - name: Install Nginx Ingress Controller
      kubernetes.core.helm:
        chart_ref: ingress-nginx/ingress-nginx
        release_namespace: ingress-nginx
        create_namespace: true
        name: ingress-nginx
        set_values:
          - value: controller.service.loadBalancerIP=192.168.56.90
      changed_when: false
    - name: Add Kubernetes-dashboard Helm repository
      kubernetes.core.helm_repository:
        name: kubernetes-dashboard
        repo_url: "https://kubernetes.github.io/dashboard/"
    - name: Install Kubernetes Dashboard Controller
      kubernetes.core.helm:
        chart_ref: kubernetes-dashboard/kubernetes-dashboard
        release_namespace: kubernetes-dashboard
        create_namespace: true
        name: kubernetes-dashboard
    - name: Copy adminuser manifest for dashboard
      ansible.builtin.copy:
        src: resources/dashboard-adminuser.yaml
        dest: /tmp/dashboard-adminuser.yaml
    - name: Apply adminuser manifest
      ansible.builtin.command: kubectl apply -f /tmp/dashboard-adminuser.yaml
    - name: Copy ingress manifest for dashboard
      ansible.builtin.copy:
        src: resources/dashboard-ingress.yaml
        dest: /tmp/dashboard-ingress.yaml
    - name: Wait until ingress-nginx is fully initialized
      ansible.builtin.command: >
        kubectl wait
        -n ingress-nginx
        -l app.kubernetes.io/name=ingress-nginx,app.kubernetes.io/component=controller --for=condition=ready
        pod
        --timeout=60s
      changed_when: false
    - name: Apply Dashboard Ingress manifest
      ansible.builtin.command: kubectl apply -f /tmp/dashboard-ingress.yaml
      changed_when: false
# Needed for monitoring
    - name: Add Prometheus Community repo
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: https://prometheus-community.github.io/helm-charts
    - name: Copy monitoring values.yaml to remote machine
      ansible.builtin.copy:
        src: monitoring-values.yaml  # Local file in ansible/ folder
        dest: /tmp/monitoring-values.yaml
    - name: Install kube-prometheus-stack (Prometheus-Operator + Grafana)
      kubernetes.core.helm:
        name: monitoring                      
        chart_ref: prometheus-community/kube-prometheus-stack
        namespace: monitoring                  # Seperate Namespace
        create_namespace: true
        update_repo_cache: true
        values_files:
          - /tmp/monitoring-values.yaml
#   Step 23: Install Istio
    - name: Detect machine architecture
      ansible.builtin.set_fact:
        istio_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"
    - name: Set Istio version
      ansible.builtin.set_fact:
        istio_version: "1.25.2"
    - name: Download Istio archive
      ansible.builtin.get_url:
        url: "https://github.com/istio/istio/releases/download/{{ istio_version }}/istio-{{ istio_version }}-linux-{{ istio_arch }}.tar.gz"
        dest: "/tmp/istio.tar.gz"
        mode: '0644'
    - name: Extract Istio archive
      ansible.builtin.unarchive:
        src: "/tmp/istio.tar.gz"
        dest: "/opt"
        remote_src: yes
    - name: Move istioctl to /usr/local/bin
      ansible.builtin.copy:
        src: "/opt/istio-{{ istio_version }}/bin/istioctl"
        dest: "/usr/local/bin/istioctl"
        remote_src: yes
        mode: '0755'
    - name: Copy IstioOperator config to the VM
      ansible.builtin.copy:
        src: resources/istio-gateway.yml
        dest: /tmp/istio-gateway.yml
        remote_src: no
        mode: '0644'
    - name: Install Istio with custom config
      ansible.builtin.command: >
        istioctl install -y -f /tmp/istio-gateway.yml
      args:
        chdir: /home/vagrant

